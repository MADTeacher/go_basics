package main

import (
	"fmt"
	"strings"
)

func main() {
	var b strings.Builder

	// Write - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –±–∞–π—Ç—ã (—Å—Ç—Ä–æ–∫—É) –≤ Builder
	n, err := b.Write([]byte("Hello, "))
	if err != nil { // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
		panic(err)
	}
	fmt.Printf("After Write: %q (bytes written: %d)\n", b.String(), n)

	// WriteString - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
	n, _ = b.WriteString("world")
	fmt.Printf("After WriteString: %q (bytes written: %d)\n", b.String(), n)

	// WriteByte - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –±–∞–π—Ç (—Å–∏–º–≤–æ–ª)
	b.WriteByte('!')
	fmt.Printf("After WriteByte: %q\n", b.String())

	// WriteRune - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–¥–∏–Ω Unicode-—Å–∏–º–≤–æ–ª
	n, _ = b.WriteRune('üåç')
	fmt.Printf("After WriteRune: %q (bytes written: %d)\n", b.String(), n)

	// Len - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏
	fmt.Printf("Current length: %d\n", b.Len())

	// Cap - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –µ–º–∫–æ—Å—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –±—É—Ñ–µ—Ä–∞
	fmt.Printf("Current capacity: %d\n", b.Cap())

	// Grow - —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –µ–º–∫–æ—Å—Ç—å –±—É—Ñ–µ—Ä–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Builder
	b.Grow(100)
	fmt.Printf("After Grow(100), new capacity: %d\n", b.Cap())

	// Reset - –æ—á–∏—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ Builder-–∞
	b.Reset()
	fmt.Printf("After Reset: %q, length: %d\n", b.String(), b.Len())
}
